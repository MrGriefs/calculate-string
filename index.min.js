/**
 * Copyright (c) 2021, Reece Stokes. (GPL-3.0 Licensed)
 * https://github.com/MrGriefs/calculate-string
 */
const reg={bra:/\((.+)\)/,ind:/([\d.]+)\^([\d.]+)/,div:/([\d.]+)[/รท]([\d.]+)/,mul:/([\d.]+)[*x]([\d.]+)/i,add:/([\d.]+)\+([\d.]+)/,sub:/([\d.]+)-([\d.]+)/},ops={bra:(r,e,t)=>parseString(r,t),ind:(r,e)=>Math.pow(Number(r),Number(e)),div:(r,e)=>Number(r)/Number(e),mul:(r,e)=>Number(r)*Number(e),add:(r,e)=>Number(r)+Number(e),sub:(r,e)=>Number(r)-Number(e)},orders={BIDMAS:["bra","ind","div","mul","add","sub"],PEMDAS:["bra","ind","mul","div","add","sub"]};function operate(r,e,t,o){return(0,ops[r])(e,t,o)}function parseString(r,e=orders.BIDMAS){"number"==typeof r&&(r=String(r)),r=r.replace(/[ ,]+/g,"");for(const o of e){const n=reg[o];if(n)for(var t;t=r.match(n);)r=r.slice(0,t.index)+operate(o,t[1],t[2],e)+r.slice(t.index+t[0].length)}return r}function calculateString(r,e=orders.BIDMAS){if("string"==typeof e&&(e=orders[e.toUpperCase()]),!Array.isArray(e))throw new TypeError('Format must be "BIDMAS", "PEMDAS" or an Array, got "'+typeof e+'".');if("string"!=typeof r)throw new TypeError('`string` must be type of string, got "'+typeof r+'".');return Number(parseString(r,e))}"object"==typeof exports&&"undefined"!=typeof module?module.exports=calculateString:("undefined"!=typeof globalThis?globalThis:self).calculateString=calculateString;
